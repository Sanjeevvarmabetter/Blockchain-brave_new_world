"use strict";function t(t){if(t&&t.__esModule)return t;var n=Object.create(null);return t&&Object.keys(t).forEach((function(e){if("default"!==e){var i=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,i.get?i:{enumerable:!0,get:function(){return t[e]}})}})),n.default=t,Object.freeze(n)}var n=t(require("bigint-crypto-utils"));class e{constructor(t,n){this.n=t,this._n2=this.n**2n,this.g=n}get bitLength(){return n.bitLength(this.n)}encrypt(t,e){if(void 0===e)do{e=n.randBetween(this.n)}while(1n!==n.gcd(e,this.n));return n.modPow(this.g,t,this._n2)*n.modPow(e,this.n,this._n2)%this._n2}addition(...t){return t.reduce(((t,n)=>t*n%this._n2),1n)}plaintextAddition(t,...e){return e.reduce(((t,e)=>t*n.modPow(this.g,e,this._n2)%this._n2),t)}multiply(t,e){return n.modPow(t,e,this._n2)}}class i{constructor(t,n,e,i,r){this.lambda=t,this.mu=n,this._p=i,this._q=r,this.publicKey=e}get bitLength(){return n.bitLength(this.publicKey.n)}get n(){return this.publicKey.n}decrypt(t){return void 0!==this._p&&void 0!==this._q?r(n.modPow(t,this.lambda,this.publicKey._n2,[[this._p,2],[this._q,2]]),this.publicKey.n)*this.mu%this.publicKey.n:r(n.modPow(t,this.lambda,this.publicKey._n2),this.publicKey.n)*this.mu%this.publicKey.n}getRandomFactor(t){if(this.publicKey.g!==this.n+1n)throw RangeError("Cannot recover the random factor if publicKey.g != publicKey.n + 1. You should generate yout keys using the simple variant, e.g. generateRandomKeys(3072, true)");if(void 0===this._p||void 0===this._q)throw Error("Cannot get random factor without knowing p and q");const e=this.decrypt(t),i=(this._p-1n)*(this._q-1n),r=n.modInv(this.n,i),o=t*(1n-e*this.n)%this.publicKey._n2;return n.modPow(o,r,this.n,[[this._p,1],[this._q,1]])}}function r(t,n){return(t-1n)/n}function o(t,e){const i=n.randBetween(t),r=n.randBetween(t);return(i*t+1n)*n.modPow(r,t,e)%e}exports.PrivateKey=i,exports.PublicKey=e,exports.generateRandomKeys=async function(t=3072,s=!1){let h,c,u,a,d,l;do{h=await n.prime(Math.floor(t/2)+1),c=await n.prime(Math.floor(t/2)),u=h*c}while(c===h||n.bitLength(u)!==t);if(s)a=u+1n,d=(h-1n)*(c-1n),l=n.modInv(d,u);else{const t=u**2n;a=o(u,t),d=n.lcm(h-1n,c-1n),l=n.modInv(r(n.modPow(a,d,t),u),u)}const p=new e(u,a);return{publicKey:p,privateKey:new i(d,l,p,h,c)}},exports.generateRandomKeysSync=function(t=3072,s=!1){let h,c,u,a,d,l;do{h=n.primeSync(Math.floor(t/2)+1),c=n.primeSync(Math.floor(t/2)),u=h*c}while(c===h||n.bitLength(u)!==t);if(s)a=u+1n,d=(h-1n)*(c-1n),l=n.modInv(d,u);else{const t=u**2n;a=o(u,t),d=n.lcm(h-1n,c-1n),l=n.modInv(r(n.modPow(a,d,t),u),u)}const p=new e(u,a);return{publicKey:p,privateKey:new i(d,l,p,h,c)}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubm9kZS5janMiLCJzb3VyY2VzIjpbIi4uL3NyYy90cy9QdWJsaWNLZXkudHMiLCIuLi9zcmMvdHMvUHJpdmF0ZUtleS50cyIsIi4uL3NyYy90cy9nZW5lcmF0ZVJhbmRvbUtleXMudHMiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbIlB1YmxpY0tleSIsImNvbnN0cnVjdG9yIiwibiIsImciLCJ0aGlzIiwiX24yIiwiYml0TGVuZ3RoIiwiYmN1IiwiZW5jcnlwdCIsIm0iLCJyIiwidW5kZWZpbmVkIiwicmFuZEJldHdlZW4iLCJnY2QiLCJtb2RQb3ciLCJhZGRpdGlvbiIsImNpcGhlcnRleHRzIiwicmVkdWNlIiwic3VtIiwibmV4dCIsInBsYWludGV4dEFkZGl0aW9uIiwiY2lwaGVydGV4dCIsInBsYWludGV4dHMiLCJtdWx0aXBseSIsImMiLCJrIiwiUHJpdmF0ZUtleSIsImxhbWJkYSIsIm11IiwicHVibGljS2V5IiwicCIsInEiLCJfcCIsIl9xIiwiZGVjcnlwdCIsIkwiLCJnZXRSYW5kb21GYWN0b3IiLCJSYW5nZUVycm9yIiwiRXJyb3IiLCJwaGkiLCJuSW52TW9kUGhpIiwibW9kSW52IiwiYzEiLCJhIiwiZ2V0R2VuZXJhdG9yIiwibjIiLCJhbHBoYSIsImJldGEiLCJhc3luYyIsImJpdGxlbmd0aCIsInNpbXBsZVZhcmlhbnQiLCJwcmltZSIsIk1hdGgiLCJmbG9vciIsImxjbSIsInByaXZhdGVLZXkiLCJwcmltZVN5bmMiXSwibWFwcGluZ3MiOiJvVkFLYyxNQUFPQSxFQVduQkMsWUFBYUMsRUFBV0MsR0FDdEJDLEtBQUtGLEVBQUlBLEVBQ1RFLEtBQUtDLElBQU1ELEtBQUtGLEdBQUssR0FDckJFLEtBQUtELEVBQUlBLENBQ1YsQ0FNR0csZ0JBQ0YsT0FBT0MsRUFBSUQsVUFBVUYsS0FBS0YsRUFDM0IsQ0FVRE0sUUFBU0MsRUFBV0MsR0FDbEIsUUFBVUMsSUFBTkQsRUFDRixHQUNFQSxFQUFJSCxFQUFJSyxZQUFZUixLQUFL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
